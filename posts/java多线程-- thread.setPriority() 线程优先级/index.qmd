---
title: "java多线程-- thread.setPriority() 线程优先级"
author: "dd21"
date: "2022-12-05" 
categories: [java]
image: ../csdn.png
---


## 线程优先级
 * 不设置优先级,默认为 5   
 * 先设置,在启动!!!!
 * 优先级只是相对的,大概率下是优先级高的先执行,不是一定先执行
 * 
```java
package cn.usts.edu.lesson06;

/**
 * 线程优先级
 * 不设置优先级,默认为 5   
 * 先设置,在启动!!!!
 * 
 * 优先级只是相对的,大概率下是优先级高的先执行,不是一定先执行
 * */
public class ThreadPriorityDemo implements Runnable{
    @Override
    public void run() {
        // 打印       线程名----线程优先级
        System.out.println(Thread.currentThread().getName()+"-----"+Thread.currentThread().getPriority());

    }

    // 主线程
    public static void main(String[] args) {
        ThreadPriorityDemo threadPriorityDemo = new ThreadPriorityDemo();
        Thread t1 = new Thread(threadPriorityDemo,"A");
        Thread t2 = new Thread(threadPriorityDemo,"B");
        Thread t3 = new Thread(threadPriorityDemo,"C");
        Thread t4 = new Thread(threadPriorityDemo,"D");
        Thread t5 = new Thread(threadPriorityDemo,"E");
        Thread t6 = new Thread(threadPriorityDemo,"F");
        Thread t7 = new Thread(threadPriorityDemo,"G");

        t1.start();//不设置优先级,默认为 5   先设置,在启动!!!!

        t2.setPriority(2);
        t2.start();

        t3.setPriority(3);
        t3.start();

        t4.setPriority(4);
        t4.start();

        t5.setPriority(5);
        t5.start();

        t6.setPriority(6);
        t6.start();

        t7.setPriority(Thread.MAX_PRIORITY); // MAX_PRIORITY=10
        t7.start();



    }

}

```

