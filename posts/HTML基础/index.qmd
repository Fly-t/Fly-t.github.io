---
title: "HTML基础"
author: "dd21"
date: "2022-12-05" 
categories: [html]
image: ../csdn.png
---


lz也是从知乎上看到这个这个网站，很不错，边学边敲。
网址：[https://www.freecodecamp.one/](https://www.freecodecamp.one/)
这个算是自己做个小笔记（cv大法）吧，看一点敲一点，cv一点。

## 标题标签

HTML 是英文 Hyper Text Markup Language（超文本标记语言）的缩写。

	大部分 HTML 元素都有一个开始标记和一个结束标记。
	
	开始标记像这样：<h1>
	
	结束标记像这样：</h1>
	
	开始标记和结束标记的唯一区别就是结束标记多了一个/。
```bash
<h1>Hello World</h1>
```
这些元素用来告诉浏览器，网站的结构是什么样子。h1元素通常被用作主标题，h2元素通常被用作副标题，还有h3、h4、h5、h6元素，它们分别用作不同级别的标题。

```bash
<h2>Hello World</h2>
<h3>Hello World</h3>
<h4>Hello World</h4>
<h5>Hello World</h5>
```
## 段落标签

p是paragraph的缩写，通常被用来创建一个段落，就和你写作文一样。

你可以像这样创建一个段落：

```bash
<p>I'm a p tag!</p>
```


## 占位符
Web 开发者通常用lorem ipsum text来做占位符，占位符就是占着位置的一些文字，没有实际意义。

为什么叫lorem ipsum text呢?是因为lorem ipsum是古罗马西塞罗谚语的前两个单词。

从公元16世纪开始lorem ipsum text就被当做占位符了，这种传统延续到了互联网时代。与此同时，孙悟空也在五指山下被压了500年，然后就进化成程序猿了，是不是很巧合。^_^

## 给 HTML 添加注释

```bash
注释的开始标记是<!--，结束标记是-->。

<!--我是注释的内容，代码不执行-->
```
## HTML5 元素介绍
HTML5 引入了很多更具描述性的 HTML 元素，例如：header、footer、nav、video、article、section等等。

这些元素让 HTML 更易读，同时有助于搜索引擎优化和无障碍访问。

main元素让搜索引擎和开发者瞬间就能找到网页的主要内容。

## 给网站添加图片：img标签
用img元素来为你的网站添加图片，其中src属性指向一个图片的地址。

例如：

```bash
<img src="https://www.your-image-source.com/your-image.jpg">
```

注意：img元素是没有结束标记的。

所有的img元素必须有alt属性，alt属性的文本是当图片无法加载时显示的替代文本，这对于通过屏幕阅读器来浏览网页的用户非常重要。

注意：如果图片是纯装饰性的，用一个空的alt是最佳实践。

理想情况下，alt属性不应该包含特殊字符，除非需要。

## 用锚点实现网页间的跳转
你可以用a锚点（Anchor，简写 a）来实现网页间的跳转。

锚点需要一个href属性指向目的地，它还需要有锚点文本，例如：

```bash
<a href="https://freecodecamp.one">传送至 freecodecamp.one</a>
```

然后你的浏览器会显示一个可以点击的文本，点击该文本就会跳转到https://freecodecamp.one。

## 用锚点实现网页内部跳转
锚点同样也可以用来在网页内不同区域的跳转。

设置锚点的href属性值为井号#加上想跳转区域对应的id属性值，这样就可以创建一个内部跳转。id是用来描述网页元素的一个属性，它的值在整个页面中唯一。

下面是用来创建内部锚点的例子：

```bash
<a href="#contacts-header">Contacts</a>
...
<h2 id="contacts-header">Contacts</h2>
```
当用户点击了*Contacts*链接，页面就会跳转到网页的Contacts区域。

## 将锚点嵌套在段落中
你可以在其他文本元素内嵌套链接。

```bash
<p>
Here's a <a target="_blank" href="http://freecodecamp.one"> link to freecodecamp.one</a> for you to follow.
</p>
```
让我们来分解这个例子：
通常，文本是被包裹在p段落内：

```bash
<p> Here's a ... for you to follow. </p>
```

```bash
接下来是anchor锚点<a>（需要结束标记 </a>）:
```

```bash
<a> ... </a>
```

**target** 是锚点的一个属性，它指定了会以什么方式来打开链接，属性值 **"_blank"**的意思是链接会在**新元素页打开**。

href是锚点的另一个属性：它指定了链接的 URL 地址：

```bash
<a href="http://freecodecamp.one"> ... </a>
```

锚点元素内的文本："link to freecodecamp.one"，会显示为一个可以点击的链接：

```bash
<a href=" ... ">link to freecodecamp.one</a>
```
## 用 # 号来创建固定链接
有时你想为网站添加一个锚点，但如果你还不确定要将它链接到哪儿，这时可以使用固定链接。

href属性的当前值是指向 "http://freecatphotoapp.com"，将href属性的值替换为#，也称为井号，就可以创建固定链接。

```bash
例如: href="#"
```
## 给图片添加链接
你可以通过把元素嵌套进锚点里使其变成一个链接。

把你的图片嵌套进锚点。举例如下：

```bash
<a href="#"><img src="http://cdn.chenzhicheng.com/running-cats.jpg" alt="三只萌萌的小猫"></a>
```
把锚点的href属性设置为#，就可以创建固定链接。

## 创建一个无序列表

HTML 有一个特定的元素用于创建无序列表unordered lists（缩写 ul）。

无序列表以`<ul>`开始，中间包含一个或多个`<li>`元素，最后以`</ul>`结尾。

例如:

```bash
<ul>
  <li>牛奶</li>
  <li>奶酪</li>
</ul>
```
将会创建一个包含牛奶和奶酪的无序列表。
## 创建一个有序列表

HTML 有一个特定的元素用于创建有序列表`ordered lists`（缩写 ol）。

有序列表以`<ol>`开始，中间包含一个或多个`<li>`元素，最后以`</ol>`结尾。

例如:

```bash
<ol>
  <li>加菲猫</li>
  <li>哆啦A梦</li>
</ol>
```
## 创建一个输入框
现在让我们来创建一个form表单。

input输入框可以让你轻松获得用户的输入。

你可以像这样创建一个文本输入框：

`<input type="text">`

注意：input输入框是`没有结束标记的`
## 给输入框添加占位符文本(在输入框位置显示提示信息)
Placeholder占位符是用户在input输入框中输入任何东西前的预定义文本。

你可以像这样创建一个占位符：`<input type="text" placeholder="this is placeholder text">`
**效果：**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504163853807.png)


## 创建一个表单
通过给form表单添加一个action属性，你可以使用纯 HTML 来构建向服务器提交数据的 Web 表单。

例如:
`<form action="/url-where-you-want-to-submit-form-data"></form>`
在input输入框外层创建一个form表单，然后设置表单的action属性为`"/submit-cat-photo"`。
## 给表单添加提交按钮

让我们来给表单添加一个submit提交按钮，当点击提交按钮时，表单中的数据将会被发送到action属性指定的地址上。

例如：
`<button type="submit">this button submits the form</button>`
**效果：**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504164539912.png)
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504164559898.png)
## 给表单添加一个必填字段

当你设计表单时，你可以指定某些字段为必填项(required)，只有当用户填写了该字段后，才可以提交表单。

如果你想把文本输入框设置为必填项，在input元素中加上`required`属性就可以了，例如：`<input type="text" required>`

## 创建一组单选按钮

`radio buttons`（单选按钮）就好比单项选择题，正确答案只有一个。

单选按钮只是`input`输入框的一种类型。

每一个单选按钮都应该嵌套在它自己的`label`（标签）元素中。

所有关联的单选按钮应该拥有相同的`name`属性。

下面是一个单选按钮的例子：

```bash
<label>
  <input type="radio" name="indoor-outdoor">Indoor
</label>
```
最佳实践是在`label`元素上设置`for`属性，让其值与单选按钮的`id`属性值相等，这样就在`label`元素和它的子元素单选按钮之间创建了一种链接关系。例如：

```bash
<label for="indoor">
  <input id="indoor" type="radio" name="indoor-outdoor">Indoor
</label>
```
**效果：**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504170129953.png)

## 创建一组复选框

`heckboxes`（复选框）就好比多项选择题，正确答案有多个。

复选框是`input`输入框的另一种类型。

每一个复选框都应该嵌套在它自己的`label`（标签）元素中。

所有关联的复选框应该拥有相同的`name`属性。

最佳实践是在`label`元素上设置`for`属性，让其值与复选框的id属性值相等，这样就在label元素和它的子元素复选框之间创建了一种链接关系。例如：

下面是一个复选框的例子：
`<label for="loving"><input id="loving" type="checkbox" name="personality"> Loving</label>`

**效果：**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504170716604.png)
## 给单选按钮和复选框添加默认选中项
通过添加`checked`属性，你可以设置某个单选按钮或多选按钮被默认选中。

为此，只需给`input`元素添加 "`checked`" 属性。 例如:

```bash
<input type="radio" name="test-name" checked>
```
**效果：**
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504171024563.png)
## 元素嵌套
**将其他元素都包含在内，形成一个大整体**

`div`元素，也叫`division（层）`元素，是一个盛装其他元素的通用容器。

它也是 HTML 中出现频率最高的元素。

和其他普通元素一样，你可以用`<div>`来标记一个div元素的开始，用`</div>`来标记一个div元素的结束。


## 声明 HTML 文档的文档类型
到目前为止，我们学习了一些特定的 `HTML` 标签，还有一些标签是用来组成网页的总体结构，并且它们在每个 `HTML` 文档中都能看到。

在文档的顶部，你需要告诉浏览器你的网页用的 `HTML` 哪个版本。 `HTML` 是一个不停进化的语言，大部分浏览器都支持 `HTML` 的最新标准，也就是 `HTML5`。但是一些陈旧的网页可能使用的是 `HTML` 的旧版本。

你可以通过`<!DOCTYPE ...>`来告诉浏览器你使用的是 `HTML` 的哪个版本，"`...`" 部分就是版本的数字信息。`<!DOCTYPE html>`对应的就是 `HTML5`。

`!`和大写的`DOCTYPE`是很重要的，特别是对于老的浏览器。但`html`大写小写都可以。

接下来，所有的 `HTML` 代码都必须位于`html`标签中。其中`<html>`位于<!DOCTYPE html>的后面，</html>位于网页的结尾。

这是网页结构一个例子：

```bash
<!DOCTYPE html>
<html>
  <!-- Your HTML code goes here -->
</html>
```
## 定义 HTML 文档的标题和正文
`html`的结构主要分为两大部分：`head`、`body`。关于网页的描述都应该放入`head`标签，网页的内容都应该放入`body`标签。

比如`link`、`meta`、`title`和`style`都应该放入head标签。

这是网页布局的一个例子：

```bash
<!DOCTYPE html>
<html>
  <head>
    <!-- metadata elements -->
  </head>
  <body>
    <!-- page contents -->
  </body>
</html>
```

